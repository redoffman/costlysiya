#-------------------------------------------------------------------------------
# Name:        module1
# Purpose:
#
# Author:      redof
#
# Created:     19-03-2022
# Copyright:   (c) redof 2022
# Licence:     <your licence>
#-------------------------------------------------------------------------------


s=0x1
r=0x2
p=0x4

### Bit Or Operation

# 00000001 | 00000001 = 0000001 (0x01)
print( "s | s = %x" %(s|s))

# 00000001 | 00000010 = 0000011 ( 0x03 )
print( "s | r  = %x" %(s|s))


# 00000100 | 00000010 = 0000110 ( 0x06 )
print( "p | r  = %x" %(p|r))

# 00000100 | 00000001 = 00000101 ( 0x05 )
print( "p | s  = %x" %(p|s))

# 00000001 | 00000010 | 00000100 = 00000111 ( 0x07 )
print( "s | r | p   = %x" %(s | r | p ))




# Bit And(&)  Operation

# 00000001 & 00000001 = 0000001 (0x01)
print( "s & s = %x" %(s&s))

# 00000001 & 00000010 = 0000000 ( 0x00 )
print( "s & r  = %x" %(s&s))


# 00000100 & 00000010 = 0000000 ( 0x00 )
print( "p & r  = %x" %(p&r))

# 00000100 & 00000001 = 00000000 ( 0x00 )
print( "p & s  = %x" %(p&s))

# 00000001 & 00000010 & 00000100 = 00000000 ( 0x00 )
print( "s & r & p   = %x" %(s & r & p ))



# Bit Xor(^) Operation

# 00000001 ^ 00000001 = 0000001 (0x00)
print( "s ^ s = %x" %(s^s))

# 00000001 ^ 00000010 = 0000000 ( 0x00 )
print( "s ^ r  = %x" %(s^s))


# 00000100 ^ 00000010 = 0000000 ( 0x06 )
print( "p ^ r  = %x" %(p^r))

# 00000100 ^ 00000001 = 00000000 ( 0x05 )
print( "p ^ s  = %x" %(p^s))

# 00000001 ^ 00000010 ^ 00000100 = 00000000 ( 0x7 )
print( "s ^ r ^ p   = %x" %(s ^ r ^ p ))





